name: Testing Key Vault Deployment
on: 
  workflow_dispatch:
  push:
    branches: [main]
env: 
  RESOURCE_GROUP_NAME: DevOps-ToolsV2
  LOCATION: eastus
  MANAGED_IDENTITY_NAME: devOps-ToolsVm-identityV2
permissions:
  contents: read
  id-token: write
jobs:
      
    deploy-KV:
      name: Deploy Key Vault using Bicep
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
        - name: Get Managed Identity Object ID (CLI)
          id: get-mi
          shell: bash
          run: |
            echo "Fetching identity..."
            az identity show \
              --resource-group "${{ env.RESOURCE_GROUP_NAME }}" \
              --name "${{ env.MANAGED_IDENTITY_NAME }}" \
              --output json
          
            miobjectId=$(az identity show \
              --resource-group "${{ env.RESOURCE_GROUP_NAME }}" \
              --name "${{ env.MANAGED_IDENTITY_NAME }}" \
              --query principalId \
              --output tsv)
           
            echo "Managed Identity ObjectId: $miobjectId"
            echo "objectId=$miobjectId" >> "$GITHUB_OUTPUT"
        - name: Deploy Key Vault using BICEP
          run: |
            echo "Deploying Key Vault with Managed Identity Object ID: ${{ steps.get-mi.outputs.objectId }}"  
            principalId="${{ steps.get-mi.outputs.objectId }}"
            echo "Principal ID: $principalId"

            az deployment group create \
              --name deploy-kv-module \
              --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
              --template-file ./avm/res/key-vault/vault/devops-kv.bicep \
              --parameters vmMiPrincipalId="8f9f7624-eb16-46f7-aaef-79eb06c286db" \
              --only-show-errors          
    